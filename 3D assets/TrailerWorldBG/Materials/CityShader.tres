[gd_resource type="VisualShader" load_steps=9 format=3 uid="uid://b564rau2ek6o6"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_bcrid"]
input_name = "uv"

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_xaev0"]
default_input_values = [0, 0.53, 1, 0.0]

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_0fml0"]
default_input_values = [0, Vector2(0, 0)]
op_type = 0

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_ksakd"]
parameter_name = "BuildingBase"
default_value_enabled = true
default_value = Color(0.35542, 0.36116, 0.374099, 1)

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_lb7ua"]
parameter_name = "BuildingWindows"
default_value_enabled = true
default_value = Color(0.918115, 0.84195, 0.506829, 1)

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_ds6h4"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_5wj2y"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_ld1h3"]
function = 31

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform vec4 BuildingBase : source_color = vec4(0.355420, 0.361160, 0.374099, 1.000000);
uniform vec4 BuildingWindows : source_color = vec4(0.918115, 0.841950, 0.506829, 1.000000);



void fragment() {
// ColorParameter:5
	vec4 n_out5p0 = BuildingBase;


// ColorParameter:6
	vec4 n_out6p0 = BuildingWindows;


// Input:2
	vec2 n_out2p0 = UV;


// VectorDecompose:4
	float n_out4p0 = n_out2p0.x;
	float n_out4p1 = n_out2p0.y;


// Step:3
	float n_in3p0 = 0.53000;
	float n_out3p0 = step(n_in3p0, n_out4p1);


// FloatFunc:9
	float n_out9p0 = 1.0 - n_out3p0;


// VectorOp:7
	vec4 n_out7p0 = n_out6p0 * vec4(n_out9p0);


// VectorOp:8
	vec4 n_out8p0 = n_out5p0 + n_out7p0;


// Output:0
	ALBEDO = vec3(n_out8p0.xyz);
	EMISSION = vec3(n_out8p0.xyz);


}
"
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_bcrid")
nodes/fragment/2/position = Vector2(-2980, 580)
nodes/fragment/3/node = SubResource("VisualShaderNodeStep_xaev0")
nodes/fragment/3/position = Vector2(-1980, 740)
nodes/fragment/4/node = SubResource("VisualShaderNodeVectorDecompose_0fml0")
nodes/fragment/4/position = Vector2(-2380, 640)
nodes/fragment/5/node = SubResource("VisualShaderNodeColorParameter_ksakd")
nodes/fragment/5/position = Vector2(-1180, -300)
nodes/fragment/6/node = SubResource("VisualShaderNodeColorParameter_lb7ua")
nodes/fragment/6/position = Vector2(-1840, -60)
nodes/fragment/7/node = SubResource("VisualShaderNodeVectorOp_ds6h4")
nodes/fragment/7/position = Vector2(-900, 440)
nodes/fragment/8/node = SubResource("VisualShaderNodeVectorOp_5wj2y")
nodes/fragment/8/position = Vector2(-378.161, 241.372)
nodes/fragment/9/node = SubResource("VisualShaderNodeFloatFunc_ld1h3")
nodes/fragment/9/position = Vector2(-1447.1, 1023.92)
nodes/fragment/connections = PackedInt32Array(2, 0, 4, 0, 6, 0, 7, 0, 5, 0, 8, 0, 7, 0, 8, 1, 8, 0, 0, 0, 4, 1, 3, 1, 3, 0, 9, 0, 9, 0, 7, 1, 8, 0, 0, 5)
